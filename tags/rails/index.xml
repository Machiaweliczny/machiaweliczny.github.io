<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rails on Machiaweliczny dev</title>
    <link>http://machiaweliczny.github.io/tags/rails/index.xml</link>
    <description>Recent content in Rails on Machiaweliczny dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://machiaweliczny.github.io/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>action_cable_5.0.0.1_bug</title>
      <link>http://machiaweliczny.github.io/post/action_cable_5.0.0.1_bug/</link>
      <pubDate>Fri, 24 Mar 2017 20:48:41 +0100</pubDate>
      
      <guid>http://machiaweliczny.github.io/post/action_cable_5.0.0.1_bug/</guid>
      <description>&lt;p&gt;There is quite nasty bug in ActionCable 5.0.0.1 which I had to deal with recently:&lt;/p&gt;

&lt;p&gt;As we can read in &lt;a href=&#34;https://github.com/rails/rails/blob/5-1-stable/actioncable/CHANGELOG.md&#34;&gt;changelog for 5.1.0&lt;/a&gt; there was a bug:&lt;/p&gt;

&lt;p&gt;Protect against concurrent writes to a WebSocket connection from multiple threads; the underlying OS write is not always threadsafe.&lt;/p&gt;

&lt;p&gt;Tracking this was hard because my application simply didn&amp;rsquo;t receive some messages when sidekiq jobs were trying to send messages simultanously. Message not delivered and no error raised =&amp;gt; fun debugging experience :)&lt;/p&gt;

&lt;p&gt;Leaving this as short notice in case some of you are wondering why you might be losing messages with ActionCable 5.0.0.1.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>